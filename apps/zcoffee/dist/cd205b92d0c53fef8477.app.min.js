(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{1423:function(t,e,o){"use strict";o.r(e);var s=o(0),n=o.n(s),i=o(218),a=o(196),p=o(371),r=o(372),l=o(606),c=o(208),h=o.n(c),d=o(1),f=o.n(d),m=o(120),u=o.n(m),x=o(8),C=o.n(x),y=o(161),g=o(107),w=o(9),b=o(183);class E extends s.Component{constructor(t){super(t),this.state={open:this.props.open,options:this.props.defaultOptions||{},optionsForm:null}}open(t){this.setState({open:!0}),t&&(this.onSave=t)}close(){this.setState({open:!1})}async componentDidMount(){let t=[];if(this.props.defaultOptionsCode){let e=await this.context.apis.asyncGetData(this.context.userInfo.token,"listinfo",{code:this.props.defaultOptionsCode.toLowerCase()},"fields");e&&(t=t.concat(e))}let e=await this.context.apis.asyncGetData(this.context.userInfo.token,"listinfo",{code:this.props.optionsFormCode.toLowerCase()},"fields");e&&(t=[...t,...e]),t.forEach(t=>{t.tab||(t.tab=this.context.apis.getLabel("Tuỳ chọn chung"))});const o=this.createForm(t);let s=await this.context.apis.asyncGetData(this.context.userInfo.token,"options",{id_func:this.props.optionsDataCode.toLowerCase()});s||(s={id_func:this.props.optionsDataCode.toLowerCase(),option:{}}),s.option||(s.option={},await Object(g.a)(s.option,t,this.context,{},this.context.userInfo.token)),s.option.ma_ct=this.props.optionsDataCode.toUpperCase(),this.setState({optionsForm:o,options:s}),this.validationConstraints=Object(b.a)(this.props.fields,this.context)}createForm(t){return(e,o)=>{let s=this.fields=C.a.cloneDeep(t);return(n.a.createElement(y.default,{style:{padding:0},fields:s,data:e,handleValueChanged:o}))}}async save(){let t=this.state.options.option,e=this.validationConstraints||{},o=h()(t,e,{format:"flat"});if(o){let t=o.join("<br/>");this.context.alert(t)}else try{console.log("save options",this.state.options);let t=await this.context.apis.asyncPostList(this.context.userInfo.token,"options",this.state.options);this.close(),this.onSave&&this.onSave(t.option)}catch(t){this.context.alert(t.message)}}handleOptionsChanged(t){let e=C.a.cloneDeep(this.state.options.option);for(let o in t)e[o]=t[o];this.state.options.option=e,this.setState({options:this.state.options})}render(){const{options:t,optionsForm:e}=this.state;return this.state.open&&t?n.a.createElement(p.a,{maxWidth:this.props.formSize||"sm",fullWidth:!0,open:this.state.open,onClose:()=>this.setState({open:!1})},n.a.createElement(l.a,{style:{backgroundColor:this.context.config.formHeaderColor,color:this.context.config.mainTextColor}},n.a.createElement(a.a,{container:!0,direction:"row",justify:"space-between"},n.a.createElement(a.a,{item:!0},this.context.apis.getLabel("Tuỳ chọn")),n.a.createElement(a.a,{item:!0,style:{display:"flex",flexDirection:"row",alignItems:"center",justifyContent:"flex-end",paddingLeft:10}},n.a.createElement(i.a,{type:"Button",variant:"contained",color:"secondary",onClick:this.save.bind(this)},this.context.apis.getLabel("Lưu")),n.a.createElement(i.a,{variant:"contained",style:{marginLeft:5},onClick:()=>this.setState({open:!1})},n.a.createElement(u.a,null))))),n.a.createElement(r.a,{style:{padding:0,minWidth:240}},n.a.createElement("form",{noValidate:!0,style:{display:"flex",flexDirection:"column"}},n.a.createElement("div",{style:{flexGrow:1}},!!e&&e(t.option,this.handleOptionsChanged.bind(this)))))):null}}E.contextType=w.a,E.propTypes={optionsDataCode:f.a.string.isRequired,optionsFormCode:f.a.string.isRequired,fields:f.a.array,defaultOptionsCode:f.a.string,defaultOptions:f.a.object,formSize:f.a.oneOf(["sm","md","lg"]),open:f.a.bool},e.default=E}}]);